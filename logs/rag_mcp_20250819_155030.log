2025-08-19 15:50:30 |     INFO |    logging_config.py:  64 |        setup_logging | Logging initialized. Log file: logs/rag_mcp_20250819_155030.log
2025-08-19 15:50:30 |     INFO |             tools.py:  16 |             <module> | Initializing MCP Tools Module
2025-08-19 15:50:30 |     INFO |             tools.py:  36 |             <module> | Creating ChromaDBManager instance
2025-08-19 15:50:30 |     INFO | chromadb_operations.py:  41 |             __init__ | Initializing ChromaDBManager
2025-08-19 15:50:30 |     INFO | chromadb_operations.py:  67 |             __init__ | Loading embedding model: BAAI/bge-small-en-v1.5
2025-08-19 15:50:30 |     INFO | SentenceTransformer.py: 219 |             __init__ | Use pytorch device_name: cpu
2025-08-19 15:50:30 |     INFO | SentenceTransformer.py: 227 |             __init__ | Load pretrained SentenceTransformer: BAAI/bge-small-en-v1.5
2025-08-19 15:50:36 |     INFO | chromadb_operations.py:  71 |             __init__ | Embedding model loaded successfully
2025-08-19 15:50:36 |     INFO | chromadb_operations.py:  74 |             __init__ | Loading reranker model: BAAI/bge-reranker-base
2025-08-19 15:50:39 |     INFO |      CrossEncoder.py: 222 |             __init__ | Use pytorch device: cpu
2025-08-19 15:50:39 |     INFO | chromadb_operations.py:  76 |             __init__ | Reranker model loaded successfully
2025-08-19 15:50:39 |     INFO | chromadb_operations.py:  81 |             __init__ | Initializing Groq client
2025-08-19 15:50:39 |     INFO | chromadb_operations.py:  83 |             __init__ | Groq client initialized successfully
2025-08-19 15:50:39 |     INFO | chromadb_operations.py:  88 |             __init__ | Loading ChromaDB instance
2025-08-19 15:50:40 |     INFO |           posthog.py:  22 |             __init__ | Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2025-08-19 15:50:40 |     INFO | chromadb_operations.py: 129 |      _load_chroma_db | ChromaDB loaded with 2365 documents
2025-08-19 15:50:40 |     INFO | chromadb_operations.py:  92 |             __init__ | ChromaDBManager initialization completed successfully
2025-08-19 15:50:42 |     INFO |         ingestion.py:  28 |             <module> | Initializing ingestion module
2025-08-19 15:50:42 |     INFO |             tools.py:  45 |             <module> | Ingestion utilities imported from rag_mcp.ingestion
2025-08-19 15:50:42 |     INFO |             tools.py: 359 |             <module> | MCP Tools Module initialization completed
2025-08-19 15:50:42 |     INFO |            server.py:  29 |             <module> | Starting MCP Server for ChromaDB RAG Pipeline
2025-08-19 15:50:42 |     INFO |            server.py:  33 |             <module> | FastMCP server initialized
2025-08-19 15:50:42 |     INFO |            server.py: 168 |             <module> | Starting MCP server main execution
2025-08-19 15:50:42 |     INFO |            server.py: 179 |             <module> | No --github-token provided; will use environment if present
2025-08-19 15:50:42 |     INFO |            server.py: 184 |             <module> | Running MCP server...
2025-08-19 16:22:12 |     INFO |            server.py: 187 |             <module> | MCP server stopped by user (KeyboardInterrupt)
2025-08-19 16:22:12 |     INFO |            server.py: 192 |             <module> | MCP server shutdown
2025-08-19 16:22:12 |    ERROR |       base_events.py:1833 | default_exception_handler | Task exception was never retrieved
future: <Task finished name='functools' coro=<AsyncIOBackend.run.<locals>.wrapper() done, defined at /home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:2297> exception=KeyboardInterrupt()>
Traceback (most recent call last):
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/rag_mcp/server.py", line 185, in <module>
    mcp.run(transport="http", host="127.0.0.1", port=8011)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/fastmcp/server/server.py", line 352, in run
    anyio.run(
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/anyio/_core/_eventloop.py", line 74, in run
    return async_backend.run(func, args, {}, backend_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py", line 2316, in run
    return runner.run(wrapper())
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/emumba/miniconda3/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/nest_asyncio.py", line 92, in run_until_complete
    self._run_once()
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/nest_asyncio.py", line 133, in _run_once
    handle._run()
  File "/home/emumba/miniconda3/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
  File "/home/emumba/miniconda3/lib/python3.12/asyncio/tasks.py", line 396, in __wakeup
    self.__step()
  File "/home/emumba/miniconda3/lib/python3.12/asyncio/tasks.py", line 303, in __step
    self.__step_run_and_handle_result(exc)
  File "/home/emumba/miniconda3/lib/python3.12/asyncio/tasks.py", line 314, in __step_run_and_handle_result
    result = coro.send(None)
             ^^^^^^^^^^^^^^^
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py", line 2304, in wrapper
    return await func(*args)
           ^^^^^^^^^^^^^^^^^
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/fastmcp/server/server.py", line 332, in run_async
    await self.run_http_async(
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/fastmcp/server/server.py", line 1526, in run_http_async
    await server.serve()
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/uvicorn/server.py", line 70, in serve
    with self.capture_signals():
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/emumba/miniconda3/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/emumba/Desktop/Genie/Github-Repository-RAG-Pipeline-MCP/venv/lib/python3.12/site-packages/uvicorn/server.py", line 331, in capture_signals
    signal.raise_signal(captured_signal)
  File "/home/emumba/miniconda3/lib/python3.12/asyncio/runners.py", line 157, in _on_sigint
    raise KeyboardInterrupt()
KeyboardInterrupt
